name: CI - Manual Trigger (All Tests)

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to test (leave empty for current branch)'
        required: false
        type: string
      pr_number:
        description: 'PR number to test (optional, takes precedence over branch)'
        required: false
        type: string
      skip_e2e:
        description: 'Skip E2E tests (to save minutes)'
        required: false
        type: boolean
        default: false

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 50

    steps:
      - name: Determine checkout ref
        id: checkout-ref
        run: |
          if [ -n "${{ github.event.inputs.pr_number }}" ]; then
            echo "ref=refs/pull/${{ github.event.inputs.pr_number }}/merge" >> $GITHUB_OUTPUT
            echo "Testing PR #${{ github.event.inputs.pr_number }}"
          elif [ -n "${{ github.event.inputs.branch }}" ]; then
            echo "ref=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
            echo "Testing branch ${{ github.event.inputs.branch }}"
          else
            echo "ref=${{ github.ref }}" >> $GITHUB_OUTPUT
            echo "Testing default branch ${{ github.ref }}"
          fi

      - name: Checkout source
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.checkout-ref.outputs.ref }}

      - name: Sanity check repo contents
        run: ls -la

      - name: Extract Go version from go.mod
        run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go with cache
        uses: actions/setup-go@v5
        with:
          go-version: "${{ env.GO_VERSION }}"
          cache-dependency-path: ./go.sum

      - name: Install dependencies
        run: go mod download

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v1.63.4
          args: ""

      - name: Run make lint
        run: make lint

      - name: Run make test (unit tests)
        run: make test

      - name: Run make build
        run: make build

      # E2E tests (optional, can be skipped to save minutes)
      - name: Install Kind
        if: ${{ !github.event.inputs.skip_e2e }}
        run: |
          echo "Installing Kind..."
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
          kind version

      - name: Install kubectl
        if: ${{ !github.event.inputs.skip_e2e }}
        run: |
          echo "Installing kubectl..."
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Run make test-e2e
        if: ${{ !github.event.inputs.skip_e2e }}
        timeout-minutes: 35
        run: |
          echo "Running E2E tests..."
          make test-e2e

      - name: E2E tests skipped
        if: ${{ github.event.inputs.skip_e2e }}
        run: echo "E2E tests were skipped to save CI minutes"

      - name: Summary
        if: always()
        run: |
          echo "### Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch/PR**: ${{ steps.checkout-ref.outputs.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Go Version**: ${{ env.GO_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Lint**: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Unit Tests**: ✅" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: ✅" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event.inputs.skip_e2e }}" = "true" ]; then
            echo "- **E2E Tests**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **E2E Tests**: ✅" >> $GITHUB_STEP_SUMMARY
          fi
